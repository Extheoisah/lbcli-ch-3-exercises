name: Btrust Builders Learn Bitcoin CLI Chapter 3 Exercises

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
    paths:
      - 'submission/*.sh'  # Only trigger when shell scripts in submission directory change
      - 'main.yml'

jobs:
  test-bitcoin-cli-exercises:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch the last 2 commits to compare changes

      - name: Get changed files and check completed exercises
        id: file-analysis
        run: |
          # Get changed files
          CHANGED=$(git diff --name-only HEAD^ HEAD | grep '^submission/[0-9]\+\.sh$' | tr '\n' ' ')
          echo "changed_files=$CHANGED" >> $GITHUB_OUTPUT
          
          # Function to check if file is completed (has more than just comments)
          is_completed() {
            grep -v '^#' "$1" | grep -q '[^[:space:]]'
          }
          
          # Check each exercise file
          for i in {1..9}; do
            padded_num=$(printf "%02d" $i)
            if is_completed "submission/${padded_num}.sh"; then
              echo "ex${i}_completed=true" >> $GITHUB_OUTPUT
            else
              echo "ex${i}_completed=false" >> $GITHUB_OUTPUT
            fi
          done

      - name: Run Bitcoin Core setup script
        if: steps.file-analysis.outputs.changed_files != ''
        run: |
          chmod +x .github/setup.sh
          .github/setup.sh

      - name: Start bitcoind in regtest mode
        if: steps.file-analysis.outputs.changed_files != ''
        run: |
          bitcoind -regtest -daemon
          echo "Waiting for bitcoind to be ready..."

          # Wait for bitcoind to start (max 30s)
          for i in {1..30}; do
            if bitcoin-cli -regtest getblockchaininfo > /dev/null 2>&1; then
              echo "bitcoind is ready!"
              break
            fi
            echo "Still waiting for bitcoind..."
            sleep 1
          done

      - name: Verify Wallet Creation
        if: contains(steps.file-analysis.outputs.changed_files, 'submission/01.sh') || steps.file-analysis.outputs.ex1_completed == 'true'
        run: |
          chmod +x submission/01.sh
          WALLET=$(submission/01.sh)
          if [[ "$WALLET" == *"btrustwallet"* ]]; then
            echo "Wallet creation passed!"
          else
            echo "Wallet creation failed!"
            exit 1
          fi
  
      - name: Verify Wallet Balance Check
        if: contains(steps.file-analysis.outputs.changed_files, 'submission/02.sh') || steps.file-analysis.outputs.ex2_completed == 'true'
        run: |
          chmod +x submission/02.sh
          BALANCE=$(submission/02.sh)
          if [[ "$BALANCE" == "0.00000000" ]]; then
            echo "Wallet balance check passed!"
          else
            echo "Wallet balance check failed!"
            exit 1
          fi

      - name: Verify Legacy Address Generation
        if: contains(steps.file-analysis.outputs.changed_files, 'submission/03.sh') || steps.file-analysis.outputs.ex3_completed == 'true'
        run: |
          chmod +x submission/03.sh
          LEGACY_ADDRESS=$(submission/03.sh)
          echo "LEGACY_ADDRESS=$LEGACY_ADDRESS" >> $GITHUB_ENV
          if [[ "$LEGACY_ADDRESS" =~ ^[mn][a-km-zA-HJ-NP-Z1-9]{25,34}$ ]]; then
            echo "Legacy address generation passed!"
          else
            echo "Legacy address generation failed!"
            exit 1
          fi

      - name: Verify P2SH Address Generation
        if: contains(steps.file-analysis.outputs.changed_files, 'submission/04.sh') || steps.file-analysis.outputs.ex4_completed == 'true'
        run: |
          chmod +x submission/04.sh
          P2SH_ADDRESS=$(submission/04.sh)
          echo "P2SH_ADDRESS=$P2SH_ADDRESS" >> $GITHUB_ENV
          if [[ "$P2SH_ADDRESS" =~ ^2[0-9a-zA-Z]{25,34}$ ]]; then
            echo "P2SH address generation passed!"
          else
            echo "P2SH address generation failed!"
            exit 1
          fi

      - name: Verify Native SegWit Address Generation
        if: contains(steps.file-analysis.outputs.changed_files, 'submission/05.sh') || steps.file-analysis.outputs.ex5_completed == 'true'
        run: |
          chmod +x submission/05.sh
          NATIVE_SEGWIT_ADDRESS=$(submission/05.sh)
          echo "NATIVE_SEGWIT_ADDRESS=$NATIVE_SEGWIT_ADDRESS" >> $GITHUB_ENV
          if [[ "$NATIVE_SEGWIT_ADDRESS" =~ ^bcrt1[ac-hj-np-z02-9]{8,87}$ ]]; then
            echo "Native SegWit address generation passed!"
          else
            echo "Native SegWit address generation failed!"
            exit 1
          fi

      - name: Verify Taproot Address Generation
        if: contains(steps.file-analysis.outputs.changed_files, 'submission/06.sh') || steps.file-analysis.outputs.ex6_completed == 'true'
        run: |
          chmod +x submission/06.sh
          TAPROOT_ADDRESS=$(submission/06.sh)
          echo "TAPROOT_ADDRESS=$TAPROOT_ADDRESS" >> $GITHUB_ENV
          if [[ "$TAPROOT_ADDRESS" =~ ^bcrt1p[ac-hj-np-z02-9]{8,87}$ ]]; then
            echo "Taproot address generation passed!"
          else
            echo "Taproot address generation failed!"
            exit 1
          fi

      - name: Verify Address Validation
        if: contains(steps.file-analysis.outputs.changed_files, 'submission/07.sh') || steps.file-analysis.outputs.ex7_completed == 'true'
        run: |
          chmod +x submission/07.sh
          VALID=$(submission/07.sh)
          if [[ "$VALID" == "false" ]]; then
            echo "Address validation passed!"
          else
            echo "Address validation failed!"
            exit 1
          fi

      - name: Verify Message Signature
        if: contains(steps.file-analysis.outputs.changed_files, 'submission/08.sh') || steps.file-analysis.outputs.ex8_completed == 'true'
        run: |
          chmod +x submission/08.sh
          VALID=$(submission/08.sh)
          if [[ "$VALID" == "true" ]]; then
            echo "Message verification passed!"
          else
            echo "Message verification failed!"
            exit 1
          fi

      - name: Verify Taproot Address Using Descriptors
        if: contains(steps.file-analysis.outputs.changed_files, 'submission/09.sh') || steps.file-analysis.outputs.ex9_completed == 'true'
        run: |
          chmod +x submission/09.sh
          ACTUAL_OUTPUT=$(submission/09.sh)
          EXPECTED_OUTPUT="bcrt1puuky37nw03r8mzgnmhtvxg2cxxmzvdm5rvn362mtus3rayw6m2zqg5wwca"
          if [[ "$ACTUAL_OUTPUT" == "$EXPECTED_OUTPUT" ]]; then
            echo "Taproot address verification passed!"
          else
            echo "Taproot address verification failed!"
            exit 1
          fi
            